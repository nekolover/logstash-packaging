input {
  file {
    type => "syslog"
    path => ["/var/log/syslog", "/var/log/messages", "/var/log/auth.log"]
  }
  # udp {
  #   port => 5200
  #   type => "syslog"
  # }
  # tcp {
  #   port => 5200
  #   type => "syslog"
  # }
}

filter {
  if [type] == "syslog" {
    grok {
      patterns_dir => './patterns'
      match => [ "message", "%{SYSLOGLINE}" ]
    }
  }
}

# Access Logs
filter {
  if [type] == "syslog" {
    grok {
      patterns_dir => './patterns'
      match => [ "message", "%{COMBINEDAPACHELOG}" ]
    }
    # date {
    #   match => [ 'timestamp', 'dd/MMM/yyyy:HH:mm:ss Z' ]
    #   locale => 'en'
    # }
  }
}

# GeoIP Localisation
filter {
  if [type] == "syslog" {
    geoip {
     add_tag => [ "geoip_comp" ]
     source => "clientip"
     fields => [ "city_name", "country_code3", "latitude", "longitude" ]
    }
    if "geoip_comp" in [tags] {
      mutate {
       add_field => [ "coords", "%{[geoip][longitude]}",
                      "tmplat", "%{[geoip][latitude]}" ]
      }
      mutate {
       merge => [ "coords", "tmplat" ]
      }
      mutate {
       convert => [ "coords", "float" ]
       remove_field => [ "tmplat" ]
      }
    }
  }
}

output {
  # If your elasticsearch server is discoverable with multicast, use this:
  elasticsearch {
    cluster => "elasticsearch"
  }
}
